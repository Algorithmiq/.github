---
name: Generate Python sdist

"on":
  workflow_call:
    inputs:
      aws-region:
        description: 'AWS region to use'
        required: false
        default: 'eu-west-1'
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # such that setuptools_scm can do its job correctly

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Get CodeArtifact token
        id: codeartifact
        run: |
          TOKEN=$(aws codeartifact get-authorization-token \
            --domain algorithmiq \
            --domain-owner 406960181794 \
            --region ${{ inputs.aws-region }} \
            --query authorizationToken \
            --output text)
          REPO_URL=$(aws codeartifact get-repository-endpoint \
            --domain algorithmiq \
            --domain-owner 406960181794 \
            --repository pypi \
            --region ${{ inputs.aws-region }} \
            --format pypi \
            --query repositoryEndpoint \
            --output text)
          echo "token=$TOKEN" >> $GITHUB_OUTPUT
          echo "repo-url=$REPO_URL" >> $GITHUB_OUTPUT

      - name: Build SDist
        env:
          UV_INDEX_ALGO_PYPI_PASSWORD: ${{ steps.codeartifact.outputs.token }}
          UV_INDEX_ALGO_PYPI_URL: ${{ steps.codeartifact.outputs.repo-url }}
        run: |
          pipx install uv
          pipx run build --verbose --sdist --installer=uv

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
